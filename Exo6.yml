openapi: 3.0.3
info:
  title: User Profile API
  description: API pour gérer les profils d'utilisateurs avec décomposition en sous-ressources
  version: 1.0.0
  contact:
    name: HEI MADAGASCAR
    email: contact@hei.school
servers:
  - url: https://api.hei.school/v1
    description: Serveur principal

components:
  parameters:
    UserId:
      name: id
      in: path
      description: Identifiant unique de l'utilisateur
      required: true
      schema:
        type: string

  schemas:
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          example: "Rakoto"
        last_name:
          type: string
          example: "Zafy"
        birthdate:
          type: string
          format: date
          example: "1990-01-01"
        email:
          type: string
          format: email
          example: "RakotoZafy@gmail.com.com"
      required:
        - first_name
        - last_name
        - birthdate
        - email

    Address:
      type: object
      properties:
        address_street:
          type: string
          example: "Avaradoha"
        address_city:
          type: string
          example: "Antananarivo"
        address_country:
          type: string
          example: "Madagascar"
        address_postal_code:
          type: integer
          example: 101
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code

    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
          example: true
        language:
          type: string
          enum: [mg, fr, eng]
          example: "fr"
      required:
        - needs_newsletter
        - language

    CreateUserProfile:
      type: object
      properties:
        first_name:
          type: string
          example: "Rakoto"
        last_name:
          type: string
          example: "
        birthdate:
          type: string
          format: date
          example: "1990-01-01"
        email:
          type: string
          format: email
          example: "Rakoto.Zafy@gmail.com"
        address_street:
          type: string
          example: "Miherinarivo"
        address_city:
          type: string
          example: "Antananarivo"
        address_country:
          type: string
          example: "Madagascar"
        address_postal_code:
          type: integer
          example: 101
        needs_newsletter:
          type: boolean
          example: true
        language:
          type: string
          enum: [mg, fr, eng]
          example: "fr"
      required:
        - first_name
        - last_name
        - birthdate
        - email
        - address_street
        - address_city
        - address_country
        - address_postal_code
        - needs_newsletter
        - language

    UserProfile:
      type: object
      allOf:
        - type: object
          properties:
            identifier:
              type: string
              example: "123e4567-e89b-12d3-a456-426614174000"
          required:
            - identifier
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'

    Error:
      type: object
      properties:
        code:
          type: string
          example: "NOT_FOUND"
        message:
          type: string
          example: "Utilisateur non trouvé"
      required:
        - code
        - message
paths:
  /users:
    post:
      summary: Créer une liste d'utilisateurs
      description: Crée une liste d'utilisateurs à partir des données fournies sans identifiant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            example:
              - first_name: "Rakoto"
                last_name: "Zafy"
                birthdate: "1990-01-01"
                email: "RakotoZafy@gmail.com"
                address_street: "Avaradoha"
                address_city: "Antananarivo"
                address_country: "Madagascar"
                address_postal_code: 101
                needs_newsletter: true
                language: "fr"
              - first_name: "Marie"
                last_name: "Ravo"
                birthdate: "1995-05-15"
                email: "marie.ravo@gmail.com"
                address_street: "Miherinarivo"
                address_city: "Toamasina"
                address_country: "Madagascar"
                address_postal_code: 501
                needs_newsletter: false
                language: "mg"
      responses:
        '201':
          description: Utilisateurs créés avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
              example:
                - identifier: "123e4567-e89b-12d3-a456-426614174000"
                  first_name: "Rakoto"
                  last_name: "Zafy"
                  birthdate: "1990-01-01"
                  email: "RakotoZafy@gmail.com"
                  address_street: "Miherinarivo"
                  address_city: "Antananarivo"
                  address_country: "Madagascar"
                  address_postal_code: 101
                  needs_newsletter: true
                  language: "fr"
                - identifier: "987fcdeb-e89b-12d3-a456-426614174001"
                  first_name: "Marie"
                  last_name: "Ravo"
                  birthdate: "1995-05-15"
                  email: "marie.ravo@example.com"
                  address_street: "456 Avenue Liberté"
                  address_city: "Toamasina"
                  address_country: "Madagascar"
                  address_postal_code: 501
                  needs_newsletter: false
                  language: "mg"
        '400':
          description: Requête invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}:
    get:
      summary: Obtenir les informations d'un utilisateur
      description: Retourne toutes les informations d'un utilisateur spécifié par son identifiant
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Informations de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              example:
                identifier: "123e4567-e89b-12d3-a456-426614174000"
                first_name: "Rakoto"
                last_name: "Zafy"
                birthdate: "1990-01-01"
                email: "Rakoto.Zafy@gmail.com"
                address_street: "Miherinarivo"
                address_city: "Antananarivo"
                address_country: "Madagascar"
                address_postal_code: 101
                needs_newsletter: true
                language: "fr"
        '404':
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'